#
# Baseline CI - Central Automation and Validation Workflow
#
# This workflow serves as the backbone of the NixLine automation pipeline for baseline repositories.
# It performs comprehensive validation and orchestrates the stable promotion process.
#
# === WHAT THIS WORKFLOW DOES ===
#
# 1. VALIDATION (all pushes/PRs):
#    - Validates Nix flake integrity with `nix flake check`
#    - Tests baseline apps in dry-run mode (sync, list-licenses, create-pack, import-policy)
#    - Ensures all policy pack definitions are valid Nix expressions
#    - Validates baseline repository source integrity
#
# 2. AUTOMATION PIPELINE (main branch pushes only):
#    - Updates .stable-candidate file tracking which commit should be promoted
#    - Creates PRs for stable candidate updates with automatic merge
#    - Triggers stable tag promotion workflow for validated commits
#    - Updates consumer template flake.lock files
#    - Implements infinite loop prevention and branch cleanup
#
# 3. CONSUMER INTEGRATION:
#    - When stable tag updates, consumer repositories get policy updates on next sync
#    - Ensures baseline changes propagate safely through the organization
#
# === AUTOMATION FLOW ===
# Push to main → Validation → Stable Candidate Update → Stable Tag Promotion → Consumer Updates
#
# === DIFFERENCE FROM CONSUMER CI ===
# - Baseline repos (this): Validate the SOURCE of policies and manage stable promotion
# - Consumer repos (nixline-ci.yml): Materialize and validate policies FROM baseline
#
# Triggered by: push, pull_request, workflow_dispatch (manual)
# Automation: Automatic stable candidate updates and promotion for main branch
# Manual trigger: Available for validation and optionally force stable updates
# Purpose: Validate baseline integrity and orchestrate organization-wide policy distribution
#

name: Baseline CI

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      force_stable_update:
        description: 'Force stable candidate update even if on non-main branch'
        required: false
        type: boolean
        default: false

permissions:
  contents: write
  actions: write
  pull-requests: write

jobs:
  validate-baseline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes

      - name: Validate flake integrity
        run: nix flake check

      - name: Test baseline apps (dry-run only)
        run: |
          # Test sync app with dry-run (no file materialization in baseline itself)
          nix run .#sync -- --dry-run

          # Test other core apps
          nix run .#list-licenses
          nix run .#create-pack -- --list-examples

          # Test import-policy app (basic validation only)
          echo "# Test content" > test-file.md
          nix run .#import-policy -- --help > /dev/null
          rm test-file.md

      - name: Validate pack definitions
        run: |
          # Ensure all pack files are valid nix expressions
          for pack in packs/*.nix; do
            if [ -f "$pack" ]; then
              echo "Validating $pack"
              nix eval --file "$pack" --json > /dev/null
            fi
          done

  update-stable-candidate:
    uses: NixLine-org/.github/.github/workflows/nixline-stable-candidate-update.yml@stable
    needs: validate-baseline
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'Mark ') && !contains(github.event.head_commit.message, 'stable candidate')) ||
      (github.event_name == 'workflow_dispatch' && (github.ref == 'refs/heads/main' || github.event.inputs.force_stable_update == 'true'))
    with:
      commit_hash: ${{ github.sha }}
      branch_prefix: "automation/stable-candidate"

  trigger-stable-promotion:
    runs-on: ubuntu-latest
    needs: update-stable-candidate
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'Mark ') && !contains(github.event.head_commit.message, 'stable candidate')) ||
      (github.event_name == 'workflow_dispatch' && (github.ref == 'refs/heads/main' || github.event.inputs.force_stable_update == 'true'))
    steps:
      - name: Trigger stable promotion
        uses: actions/github-script@v8
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'promote-to-stable.yml',
              ref: 'main',
              inputs: {
                commit_hash: '${{ github.sha }}',
                promotion_target: 'stable',
                automation_trigger: 'true'
              }
            });

            console.log('Triggered stable promotion for commit ${{ github.sha }}');