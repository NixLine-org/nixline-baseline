#
# Promote to Stable Workflow
#
# Final step in the PR-based promotion process. Updates the stable tag when
# promotion PRs with the 'promote-to-stable' label are merged to main.
#
# Triggered by: PR merge events with 'promote-to-stable' label
# Purpose: Move stable tag to validated commit, clean up promotion artifacts
# Requirements: Reads commit hash from .stable-candidate marker file
#

name: Promote to Stable

on:
  pull_request:
    types: [closed]
    branches:
      - main

permissions:
  contents: write
  actions: write

jobs:
  promote:
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'promote-to-stable')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Read stable candidate
        id: candidate
        run: |
          if [ -f .stable-candidate ]; then
            CANDIDATE_COMMIT=$(cat .stable-candidate)
            echo "commit_hash=$CANDIDATE_COMMIT" >> $GITHUB_OUTPUT
            SHORT_HASH="${CANDIDATE_COMMIT:0:12}"
            echo "short_hash=$SHORT_HASH" >> $GITHUB_OUTPUT
            echo "found=true" >> $GITHUB_OUTPUT
          else
            echo "found=false" >> $GITHUB_OUTPUT
            echo "Warning: .stable-candidate file not found"
          fi

      - name: Update stable tag
        if: steps.candidate.outputs.found == 'true'
        run: |
          COMMIT=${{ steps.candidate.outputs.commit_hash }}

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Delete local stable tag if it exists to avoid conflicts
          git tag -d stable 2>/dev/null || true

          # Create new stable tag at validated commit
          git tag -a stable -m "Promote to stable: $COMMIT" $COMMIT

          # Force push the stable tag (safer than remote delete + create)
          git push --force origin stable

          echo "Updated stable tag to $COMMIT"

      - name: Cleanup marker file
        if: steps.candidate.outputs.found == 'true'
        uses: actions/github-script@v7
        env:
          SHORT_HASH: ${{ steps.candidate.outputs.short_hash }}
        with:
          script: |
            const shortHash = process.env.SHORT_HASH;

            try {
              // Get the current file to get its SHA
              const file = await github.rest.repos.getContent({
                owner: context.repo.owner,
                repo: context.repo.repo,
                path: '.stable-candidate',
                ref: 'main'
              });

              // Delete the file via API
              await github.rest.repos.deleteFile({
                owner: context.repo.owner,
                repo: context.repo.repo,
                path: '.stable-candidate',
                message: 'Remove stable candidate marker after promotion',
                sha: file.data.sha,
                branch: 'main'
              });

              console.log('Removed .stable-candidate from main');
            } catch (error) {
              console.log('Failed to remove .stable-candidate (may not exist): ' + error.message);
            }

            // Delete promotion branch
            try {
              await github.rest.git.deleteRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: 'heads/promote-' + shortHash
              });
              console.log('Deleted promotion branch');
            } catch (error) {
              console.log('Failed to delete branch (may not exist): ' + error.message);
            }

      - name: Summary
        if: steps.candidate.outputs.found == 'true'
        run: |
          echo "## Promotion Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Stable tag updated to:** \`${{ steps.candidate.outputs.commit_hash }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Consumer repositories will receive this update on their next policy sync." >> $GITHUB_STEP_SUMMARY
